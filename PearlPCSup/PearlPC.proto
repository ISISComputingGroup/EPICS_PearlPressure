OutTerminator = "\r";
InTerminator = "\r\n";

ReplyTimeout = 2000;

## read into waveform as device returns 16 integers
## Waveform reads first 15 elements
## Last element is read by a redirected %b converter.
get_st_array {
	out "st";
	in "Status Report";
	in "%*/Inputs$/";
	in "%d %(\$1INPUTS:_RAW.A)b";
	in "OK";
}

## read into waveform as device returns 5 integers
get_ls_array {
	out "ls";
	in "%*/Offset$/";
	in "%d";
	in "OK";
}

set_ra{
	out "ra%#04d";
	wait 100;
}

set_mx{
	out "mx%#04d";
	wait 100;
}

set_mn{
	out "mn%#04d";
	wait 100;
}

set_sp{
	out "sp%#04d";
	wait 100;
}

set_sf{
	out "sf%#04d";
	wait 100;
}

set_si{
	out "si%#04d";
	wait 100;
}

set_sd{
	out "sd%#04d";
	wait 100;
}

set_sloop{
	out "sloop%#01d";
	wait 100;
}

set_user_limit{
    out "ul%#04d";
	wait 100;
}

set_th {
    out "th%#04d";
	wait 100;
}

get_id {
	ExtraInput = Ignore;
	out "id";
	in "%/[0-9]{4} [0-9]{4}/";
}

get_fluid_type {
    out "id";
    in "%/(\w+)$/";
}

reset {
	out "reset";
	wait 100;
}

pu {
	out "pu";
	wait 100;
}

run {
	out "run";
	wait 100;
}

stop {
	out "stop";
	wait 100;
}

## $1 argument zero padded 4 digits
get_memory{
	ExtraInput = Ignore;
	out "vr\$1";
	in "vr%*04d %d";
}

reset_error {
    out "er";
	wait 100;
}

set_pos_lim {
    out "d+%#04d";
	wait 100;
}

set_neg_lim {
    out "d-%#04d";
	wait 100;
}

set_pos_offset {
    out "o+%#01d";
	wait 100;
}

set_neg_offset {
    out "o-%#01d";
	wait 100;
}
